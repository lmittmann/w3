// Code generated by "go generate"; DO NOT EDIT.
package fourbyte

import "github.com/lmittmann/w3"

var functions = map[[4]byte]*w3.Func{
	{0x01, 0xff, 0xc9, 0xa7}: w3.MustNewFunc("supportsInterface(bytes4)", "bool"),
	{0x02, 0x2c, 0x0d, 0x9f}: w3.MustNewFunc("swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data)", ""),
	{0x02, 0xcc, 0x25, 0x0d}: w3.MustNewFunc("isSolver(address)", "bool"),
	{0x06, 0xfd, 0xde, 0x03}: w3.MustNewFunc("name()", "string"),
	{0x07, 0x21, 0x1e, 0xf7}: w3.MustNewFunc("get_dy_underlying(int128 i, int128 j, uint256 amount)", "uint256"),
	{0x08, 0x18, 0x12, 0xfc}: w3.MustNewFunc("getApproved(uint256 tokenId)", "address operator"),
	{0x08, 0xc3, 0x79, 0xa0}: w3.MustNewFunc("Error(string)", ""),
	{0x09, 0x02, 0xf1, 0xac}: w3.MustNewFunc("getReserves()", "uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast"),
	{0x09, 0x5e, 0xa7, 0xb3}: w3.MustNewFunc("approve(address spender, uint256 amount)", "bool success"),
	{0x0c, 0x03, 0x3b, 0x9b}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, uint256 amountLimit, uint256 deadline, bytes data)", "int256 amount0, int256 amount1"),
	{0x0d, 0xfe, 0x16, 0x81}: w3.MustNewFunc("token0()", "address"),
	{0x12, 0x49, 0xc5, 0x8b}: w3.MustNewFunc("mint()", ""),
	{0x12, 0x8a, 0xcb, 0x08}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data)", "int256 amount0, int256 amount1"),
	{0x13, 0xd7, 0x9a, 0x0b}: w3.MustNewFunc("settle(address[] tokens, uint256[] clearingPrices, (uint256 sellTokenIndex, uint256 buyTokenIndex, address receiver, uint256 sellAmount, uint256 buyAmount, uint32 validTo, bytes32 appData, uint256 feeAmount, uint256 flags, uint256 executedAmount, bytes signature)[] trades, (address target, uint256 value, bytes callData)[][3] interactions)", ""),
	{0x15, 0x0b, 0x7a, 0x02}: w3.MustNewFunc("onERC721Received(address operator, address from, uint256 tokenId, bytes data)", "bytes4"),
	{0x16, 0x26, 0xba, 0x7e}: w3.MustNewFunc("isValidSignature(bytes32 hash, bytes data)", "bytes4"),
	{0x18, 0x16, 0x0d, 0xdd}: w3.MustNewFunc("totalSupply()", "uint256"),
	{0x1a, 0x68, 0x65, 0x02}: w3.MustNewFunc("liquidity()", "uint128"),
	{0x21, 0x4a, 0x6f, 0xe2}: w3.MustNewFunc("accumulateReward(uint32 currTimestamp)", ""),
	{0x23, 0xa6, 0x9e, 0x75}: w3.MustNewFunc("pancakeV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)", ""),
	{0x23, 0xb8, 0x72, 0xdd}: w3.MustNewFunc("transferFrom(address from, address to, uint256 amount)", "bool success"),
	{0x24, 0x85, 0x6b, 0xc3}: w3.MustNewFunc("execute(bytes commands, bytes[] inputs)", ""),
	{0x24, 0x8a, 0x9c, 0xa3}: w3.MustNewFunc("getRoleAdmin(bytes32 role)", "bytes32"),
	{0x2e, 0x1a, 0x7d, 0x4d}: w3.MustNewFunc("withdraw(uint256)", ""),
	{0x2f, 0x2f, 0xf1, 0x5d}: w3.MustNewFunc("grantRole(bytes32 role, address account)", ""),
	{0x31, 0x3c, 0xe5, 0x67}: w3.MustNewFunc("decimals()", "uint8"),
	{0x35, 0x93, 0x56, 0x4c}: w3.MustNewFunc("execute(bytes commands, bytes[] inputs, uint256 deadline)", ""),
	{0x36, 0x56, 0x8a, 0xbe}: w3.MustNewFunc("renounceRole(bytes32 role, address account)", ""),
	{0x36, 0xc7, 0x85, 0x16}: w3.MustNewFunc("transferFrom(address from, address to, uint160 amount, address token)", ""),
	{0x38, 0xed, 0x17, 0x39}: w3.MustNewFunc("swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline)", "uint256[] amounts"),
	{0x39, 0x47, 0x47, 0xc5}: w3.MustNewFunc("exchange(uint256 i, uint256 j, uint256 dx, uint256 min_dy, bool use_eth)", ""),
	{0x39, 0x50, 0x93, 0x51}: w3.MustNewFunc("increaseAllowance(address spender, uint256 addedValue)", "bool success"),
	{0x3a, 0x98, 0xef, 0x39}: w3.MustNewFunc("totalShares()", "uint256"),
	{0x3d, 0xf0, 0x21, 0x24}: w3.MustNewFunc("exchange(int128 i,int128 j, uint256 dx, uint256 min_dy)", ""),
	{0x3f, 0x44, 0x28, 0x64}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, uint256 amountLimit, uint256 deadline, bytes data, uint256 trackingCode)", "int256 amount0, int256 amount1"),
	{0x42, 0x84, 0x2e, 0x0e}: w3.MustNewFunc("safeTransferFrom(address from, address to, uint256 tokenId)", ""),
	{0x42, 0x96, 0x6c, 0x68}: w3.MustNewFunc("burn(uint256)", ""),
	{0x46, 0x09, 0x85, 0xe8}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, uint256 trackingCode)", "int256 amount0, int256 amount1"),
	{0x46, 0x14, 0x13, 0x19}: w3.MustNewFunc("feeGrowthGlobal1X128()", "uint256"),
	{0x48, 0x5c, 0xc9, 0x55}: w3.MustNewFunc("initialize(address token0, address token1)", ""),
	{0x49, 0x0e, 0x6c, 0xbc}: w3.MustNewFunc("flash(address recipient, uint256 amount0, uint256 amount1, bytes data)", ""),
	{0x49, 0x3f, 0x4f, 0x74}: w3.MustNewFunc("get_address(uint256 idx)", "address"),
	{0x4c, 0x84, 0xc1, 0xc8}: w3.MustNewFunc("wrapAll()", ""),
	{0x54, 0x0d, 0x49, 0x18}: w3.MustNewFunc("lmPool()", "address"),
	{0x5c, 0x60, 0xda, 0x1b}: w3.MustNewFunc("implementation()", "address"),
	{0x5c, 0x97, 0x5a, 0xbb}: w3.MustNewFunc("paused()", "bool"),
	{0x5e, 0x0d, 0x44, 0x3f}: w3.MustNewFunc("get_dy(int128 i, int128 j, uint256 amount)", "uint256"),
	{0x63, 0x52, 0x21, 0x1e}: w3.MustNewFunc("ownerOf(uint256 tokenId)", "address"),
	{0x70, 0xa0, 0x82, 0x31}: w3.MustNewFunc("balanceOf(address)", "uint256"),
	{0x71, 0x50, 0x18, 0xa6}: w3.MustNewFunc("renounceOwnership()", ""),
	{0x75, 0xd3, 0x9e, 0xcb}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, uint256 amountLimit, uint256 deadline)", "int256 amount0, int256 amount1"),
	{0x7d, 0x10, 0xd1, 0x1f}: w3.MustNewFunc("transferFromAccounts((address account, address token, uint256 amount, bytes32 balance)[])", ""),
	{0x8d, 0xa5, 0xcb, 0x5b}: w3.MustNewFunc("owner()", "address"),
	{0x90, 0x10, 0xd0, 0x7c}: w3.MustNewFunc("getRoleMember(bytes32 role, uint256 index)", "address"),
	{0x91, 0xd1, 0x48, 0x54}: w3.MustNewFunc("hasRole(bytes32 role, address account)", "bool"),
	{0x95, 0xd8, 0x9b, 0x41}: w3.MustNewFunc("symbol()", "string"),
	{0xa0, 0x71, 0x2d, 0x68}: w3.MustNewFunc("mint(uint256)", ""),
	{0xa2, 0x2c, 0xb4, 0x65}: w3.MustNewFunc("setApprovalForAll(address operator, bool approved)", ""),
	{0xa2, 0x3b, 0xa0, 0x9c}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, uint256 amountLimit, uint256 deadline, uint256 trackingCode)", "int256 amount0, int256 amount1"),
	{0xa2, 0x62, 0x90, 0x4b}: w3.MustNewFunc("get_registry()", "address"),
	{0xa4, 0x57, 0xc2, 0xd7}: w3.MustNewFunc("decreaseAllowance(address spender, uint256 subtractedValue)", "bool success"),
	{0xa4, 0x98, 0x46, 0x33}: w3.MustNewFunc("crossLmTick(int24 tick, bool zeroForOne)", ""),
	{0xa6, 0x41, 0x7e, 0xd6}: w3.MustNewFunc("exchange_underlying(int128 i, int128 j, uint256 dx, uint256 min_dy)", ""),
	{0xa9, 0x05, 0x9c, 0xbb}: w3.MustNewFunc("transfer(address to, uint256 amount)", "bool success"),
	{0xad, 0x5c, 0x46, 0x48}: w3.MustNewFunc("WETH()", "address"),
	{0xb0, 0x34, 0x43, 0x04}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data, uint256 trackingCode)", "int256 amount0, int256 amount1"),
	{0xb8, 0x8d, 0x4f, 0xde}: w3.MustNewFunc("safeTransferFrom(address from, address to, uint256 tokenId, bytes data)", ""),
	{0xbc, 0x25, 0xcf, 0x77}: w3.MustNewFunc("skim(address to)", ""),
	{0xc3, 0x1b, 0x8d, 0x7a}: w3.MustNewFunc("swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96)", "int256 amount0, int256 amount1"),
	{0xc4, 0x5a, 0x01, 0x55}: w3.MustNewFunc("factory()", "address"),
	{0xc6, 0x61, 0x06, 0x57}: w3.MustNewFunc("coins(uint256 i)", "address"),
	{0xc8, 0x7b, 0x56, 0xdd}: w3.MustNewFunc("tokenURI(uint256 tokenId)", "string"),
	{0xca, 0x15, 0xc8, 0x73}: w3.MustNewFunc("getRoleMemberCount(bytes32 role)", "uint256"),
	{0xd0, 0xc9, 0x3a, 0x7c}: w3.MustNewFunc("tickSpacing()", "int24"),
	{0xd0, 0xe3, 0x0d, 0xb0}: w3.MustNewFunc("deposit()", ""),
	{0xd2, 0x12, 0x20, 0xa7}: w3.MustNewFunc("token1()", "address"),
	{0xd5, 0x05, 0xac, 0xcf}: w3.MustNewFunc("permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s)", ""),
	{0xd5, 0x47, 0x74, 0x1f}: w3.MustNewFunc("revokeRole(bytes32 role, address account)", ""),
	{0xdd, 0x62, 0xed, 0x3e}: w3.MustNewFunc("allowance(address owner, address spender)", "uint256"),
	{0xdd, 0xca, 0x3f, 0x43}: w3.MustNewFunc("fee()", "uint24"),
	{0xe4, 0x49, 0x02, 0x2e}: w3.MustNewFunc("uniswapV3Swap(uint256 amount, uint256 minReturn, uint256[] pools)", "uint256 returnAmount"),
	{0xe9, 0x85, 0xe9, 0xc5}: w3.MustNewFunc("isApprovedForAll(address owner, address operator)", "bool"),
	{0xf2, 0xfd, 0xe3, 0x8b}: w3.MustNewFunc("transferOwnership(address newOwner)", ""),
	{0xf3, 0x05, 0x83, 0x99}: w3.MustNewFunc("feeGrowthGlobal0X128()", "uint256"),
	{0xf8, 0x51, 0xa4, 0x40}: w3.MustNewFunc("admin()", "address"),
	{0xfa, 0x46, 0x1e, 0x33}: w3.MustNewFunc("uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data)", ""),
	{0xfc, 0x0c, 0x54, 0x6a}: w3.MustNewFunc("token()", "address"),
	{0xff, 0xf6, 0xca, 0xe9}: w3.MustNewFunc("sync()", ""),
}
